package com.sekorm.core.util;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;


/**
 * 
 * @describe 常用的帮助类
 *
 * @author bowen_bao
 * @date 2017年2月13日
 */
@Component("commonUtil")
public class CommonUtil {
	
	private final Logger log = LoggerFactory.getLogger(this.getClass());
	
	/**
	 * list 集合转String  ,以 逗号连接
	 */
	public String  ListToString(List<String> list){
		String str="";
		for(String s:list){
			str+=s+",";
		}
		if(!"".equals(str)  &&  str.length()>0){
			str=str.substring(0, str.length()-1);
		}
		return str;
	}
	
	/**
	 * String  ,以 逗号连接 转 list 集合
	 */
	public List<String>  StringToList(String keyword){
		List<String> list=new ArrayList<String>();
		String[] str=keyword.split(",");
		for(int i=0;i<str.length;i++){
			list.add(str[i]);
		}
		return list;
	}
	
	
	/**
	 * 
	 * @describe  时间  ：  String yyyy-MM-dd hh:mm:ss 转Long
	 *
	 * @author bowen_bao
	 * @date 2015年7月20日
	 * @param
	 * @return
	 */
	public Long DateStringToLong(String date){
		try {
			Date d=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").parse(date);
			return d.getTime();
		} catch (ParseException e) {
			log.error("SearchUtil  DateStringToLong error" + e.getMessage());
			e.printStackTrace();
		}
		return 0l;
	}
	
	//写入properties信息
	public static void writeProperties(String filePath,String parameterName,String parameterValue) {
		Properties prop = new Properties();
		try {
			InputStream fis = new FileInputStream(filePath);
			//从输入流中读取属性列表（键和元素对）
			prop.load(fis);
			//调用 Hashtable 的方法 put。使用 getProperty 方法提供并行性。
			//强制要求为属性的键和值使用字符串。返回值是 Hashtable 调用 put 的结果。
			OutputStream fos = new FileOutputStream(filePath);
			prop.setProperty(parameterName, parameterValue);
			//以适合使用 load 方法加载到 Properties 表中的格式，
			//将此 Properties 表中的属性列表（键和元素对）写入输出流
			prop.store(fos, "Update '" + parameterName + "' value");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static String getProperties(String fileName,String key){
		Properties prop = new Properties();
		try {
			InputStream fis = new FileInputStream(fileName);
			prop.load(fis);
			return prop.getProperty(key);
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	
	public static boolean isContainChinese(String str) {
		Pattern p=Pattern.compile("[\u4e00-\u9fa5]");
		Matcher m=p.matcher(str);
		if(m.find()) {
			return true;
		}
		return false;
	}
	
	
	
	
	
}
